#include "Chebyshef_40hz_Order3.h"


// Function Declarations
static void Chebyshef_40hz_Order3_free(ChebyshefFilter *aInstancePtr);

static void Chebyshef_40hz_Order3_init(ChebyshefFilter *aInstancePtr);

// Function Definitions
//
// Arguments    : void
// Return Type  : Chebyshef_40hz_Order3StackData *
//
Chebyshef_40hz_Order3StackData *ChebyshefFilter::getStackData()
{
  return &SD_;
}

//
// DOFILTER 对输入 x 进行滤波并返回输出 y。
//
// Arguments    : ChebyshefFilter *aInstancePtr
// Return Type  : void
//
static void Chebyshef_40hz_Order3_free(ChebyshefFilter *aInstancePtr)
{
  Chebyshef_40hz_Order3StackData *localSD;
  localSD = aInstancePtr->getStackData();
  if (!localSD->pd->Hd.matlabCodegenIsDeleted) {
    localSD->pd->Hd.matlabCodegenIsDeleted = true;
  }
}

//
// DOFILTER 对输入 x 进行滤波并返回输出 y。
//
// Arguments    : ChebyshefFilter *aInstancePtr
// Return Type  : void
//
static void Chebyshef_40hz_Order3_init(ChebyshefFilter *aInstancePtr)
{
  Chebyshef_40hz_Order3StackData *localSD;
  localSD = aInstancePtr->getStackData();
  localSD->pd->Hd.matlabCodegenIsDeleted = true;
}

//
// Arguments    : void
// Return Type  : void
//
ChebyshefFilter::ChebyshefFilter()
{
  static const signed char iv[6]{1, 2, 1, 1, 1, 0};
  SD_.pd = &pd_;
  Chebyshef_40hz_Order3_init(this);
  //  设计滤波器系数时使用了以下代码:
  //
  //  N     = 3;    % Order
  //  Fpass = 40;   % Passband Frequency
  //  Apass = 1;    % Passband Ripple (dB)
  //  Fs    = 250;  % Sampling Frequency
  //
  //  h = fdesign.lowpass('n,fp,ap', N, Fpass, Apass, Fs);
  //
  //  Hd = design(h, 'cheby1', ...
  //      'SystemObject', true,...
  //       UseLegacyBiquadFilter=true);
  // System object Constructor function: dsp.BiquadFilter
  pd_.Hd.cSFunObject.P0_ICRTP = 0.0;
  for (int i{0}; i < 6; i++) {
    pd_.Hd.cSFunObject.P1_RTP1COEFF[i] = iv[i];
  }
  pd_.Hd.cSFunObject.P2_RTP2COEFF[0] = -0.889890696515016;
  pd_.Hd.cSFunObject.P2_RTP2COEFF[1] = 0.654393819178505;
  pd_.Hd.cSFunObject.P2_RTP2COEFF[2] = -0.572731862926722;
  pd_.Hd.cSFunObject.P2_RTP2COEFF[3] = 0.0;
  pd_.Hd.cSFunObject.P3_RTP3COEFF[0] = 0.191125780665872;
  pd_.Hd.cSFunObject.P4_RTP_COEFF3_BOOL[0] = true;
  pd_.Hd.cSFunObject.P3_RTP3COEFF[1] = 0.213634068536639;
  pd_.Hd.cSFunObject.P4_RTP_COEFF3_BOOL[1] = true;
  pd_.Hd.cSFunObject.P3_RTP3COEFF[2] = 0.0;
  pd_.Hd.cSFunObject.P4_RTP_COEFF3_BOOL[2] = false;
  pd_.Hd.matlabCodegenIsDeleted = false;
  // System object Initialization function: dsp.BiquadFilter
  pd_.Hd.cSFunObject.W0_FILT_STATES[0] = pd_.Hd.cSFunObject.P0_ICRTP;
  pd_.Hd.cSFunObject.W0_FILT_STATES[1] = pd_.Hd.cSFunObject.P0_ICRTP;
  pd_.Hd.cSFunObject.W0_FILT_STATES[2] = pd_.Hd.cSFunObject.P0_ICRTP;
  pd_.Hd.cSFunObject.W0_FILT_STATES[3] = pd_.Hd.cSFunObject.P0_ICRTP;
}

//
// Arguments    : void
// Return Type  : void
//
ChebyshefFilter::~ChebyshefFilter()
{
  Chebyshef_40hz_Order3_free(this);
}

//
// DOFILTER 对输入 x 进行滤波并返回输出 y。
//
// Arguments    : double x
// Return Type  : double
//
double ChebyshefFilter::dofilter(double x)
{
  dsp_BiquadFilter_0 *obj;
  obj = &pd_.Hd.cSFunObject;
  double denAccum;
  double tmpState;
  double y;
  //  MATLAB Code
  //  Generated by MATLAB(R) 9.14 and DSP System Toolbox 9.16.
  //  Generated on: 13-Mar-2024 14:39:10
  //  要通过此函数生成 C/C++ 代码，请使用 codegen 命令。有关详细信息，请键入
  //  'help codegen'。
  
  // System object Outputs function: dsp.BiquadFilter
  denAccum = obj->P3_RTP3COEFF[0] * x;
  denAccum -= obj->P2_RTP2COEFF[0] * obj->W0_FILT_STATES[0];
  tmpState = denAccum - obj->P2_RTP2COEFF[1] * obj->W0_FILT_STATES[1];
  denAccum = obj->P1_RTP1COEFF[0] * tmpState;
  denAccum += obj->W0_FILT_STATES[0] * obj->P1_RTP1COEFF[1];
  denAccum += obj->W0_FILT_STATES[1] * obj->P1_RTP1COEFF[2];
  obj->W0_FILT_STATES[1] = obj->W0_FILT_STATES[0];
  obj->W0_FILT_STATES[0] = tmpState;
  denAccum *= obj->P3_RTP3COEFF[1];
  denAccum -= obj->P2_RTP2COEFF[2] * obj->W0_FILT_STATES[2];
  tmpState = denAccum - obj->P2_RTP2COEFF[3] * obj->W0_FILT_STATES[3];
  denAccum = obj->P1_RTP1COEFF[3] * tmpState;
  denAccum += obj->W0_FILT_STATES[2] * obj->P1_RTP1COEFF[4];
  y = denAccum + obj->W0_FILT_STATES[3] * obj->P1_RTP1COEFF[5];
  obj->W0_FILT_STATES[3] = obj->W0_FILT_STATES[2];
  obj->W0_FILT_STATES[2] = tmpState;
  return y;
}

//
// Arguments    : void
// Return Type  : BiquadFilter
//
namespace coder {
namespace dspcodegen {
BiquadFilter::BiquadFilter() = default;

//
// Arguments    : void
// Return Type  : void
//
BiquadFilter::~BiquadFilter() = default;

} // namespace dspcodegen
} // namespace coder

//
// File trailer for ChebyshefFilter.cpp
//
// [EOF]
//
